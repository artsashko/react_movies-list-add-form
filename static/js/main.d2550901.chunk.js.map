{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","reset","setState","handleSubmit","event","onAdd","props","preventDefault","handleChange","target","name","value","this","movieKeys","Object","keys","onSubmit","type","placeholder","onChange","trimLeft","required","Component","App","moviesFromServer","addMovie","ReactDOM","render","document","getElementById"],"mappings":"+xEAIaA,G,kBAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAaC,EAAvB,EAAuBA,OAAQC,EAA/B,EAA+BA,QAA/B,OACvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aAaRJ,EAAUS,aAAe,CACvBP,YAAa,ICxCR,IAAMQ,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACxB,yBAAKN,UAAU,UACZM,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,SAgBxCH,EAAWD,aAAe,CACxBE,OAAQ,I,kBCtBGK,G,MAAb,4MACEC,MAAQ,CACNJ,MAAO,CACLZ,MAAO,GACPC,YAAa,GACbC,OAAQ,GACRC,QAAS,GACTW,OAAQ,KAPd,EAWEG,MAAQ,WACN,EAAKC,SAAS,CACZN,MAAO,CACLZ,MAAO,GACPC,YAAa,GACbC,OAAQ,GACRC,QAAS,GACTW,OAAQ,OAlBhB,EAuBEK,aAAe,SAACC,GAAW,IACjBC,EAAU,EAAKC,MAAfD,MACAT,EAAU,EAAKI,MAAfJ,MAERQ,EAAMG,iBACNF,EAAMT,GACN,EAAKK,SA7BT,EAgCEO,aAAe,SAACJ,GAAW,IAAD,EACAA,EAAMK,OAAtBC,EADgB,EAChBA,KAAMC,EADU,EACVA,MAEd,EAAKT,UAAS,SAAAF,GAAK,MAAK,CACtBJ,MAAM,2BACDI,EAAMJ,OADN,kBAEFc,EAAOC,SAtChB,uDA2CY,IAAD,OACCf,EAAUgB,KAAKZ,MAAfJ,MACFiB,EAAYC,OAAOC,KAAKnB,GAE9B,OACE,0BAAMoB,SAAUJ,KAAKT,aAAcf,UAAU,QAC1CyB,EAAUlB,KAAI,SAAAE,GAAG,OAChB,2BACEA,IAAKA,EACLoB,KAAK,OACLP,KAAMb,EACNqB,YAAarB,EACbsB,SAAU,EAAKX,aACfG,MAAOf,EAAMC,GAAKuB,WAClBhC,UAAU,aACViC,UAAQ,OAGZ,4BAAQJ,KAAK,UAAb,sBA7DR,GAA8BK,c,OCEjBC,EAAb,4MACEvB,MAAQ,CACNN,OAAQ8B,GAFZ,EAKEC,SAAW,SAAC7B,GAAW,IACbF,EAAW,EAAKM,MAAhBN,OAER,EAAKQ,SAAS,CACZR,OAAO,GAAD,mBACDA,GADC,CAEJE,OAXR,uDAgBY,IACAF,EAAWkB,KAAKZ,MAAhBN,OAER,OACE,yBAAKN,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYM,OAAQA,KAEtB,yBAAKN,UAAU,WACb,kBAAC,EAAD,CAAUiB,MAAOO,KAAKa,iBAzBhC,GAAyBH,aCDzBI,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.d2550901.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './NewMovie.scss';\n\nexport class NewMovie extends Component {\n  state = {\n    movie: {\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    },\n  };\n\n  reset = () => {\n    this.setState({\n      movie: {\n        title: '',\n        description: '',\n        imgUrl: '',\n        imdbUrl: '',\n        imdbId: '',\n      },\n    });\n  }\n\n  handleSubmit = (event) => {\n    const { onAdd } = this.props;\n    const { movie } = this.state;\n\n    event.preventDefault();\n    onAdd(movie);\n    this.reset();\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState(state => ({\n      movie: {\n        ...state.movie,\n        [name]: value,\n      },\n    }));\n  }\n\n  render() {\n    const { movie } = this.state;\n    const movieKeys = Object.keys(movie);\n\n    return (\n      <form onSubmit={this.handleSubmit} className=\"form\">\n        {movieKeys.map(key => (\n          <input\n            key={key}\n            type=\"text\"\n            name={key}\n            placeholder={key}\n            onChange={this.handleChange}\n            value={movie[key].trimLeft()}\n            className=\"form__item\"\n            required\n          />\n        ))}\n        <button type=\"submit\">\n          Add New Movie\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    const { movies } = this.state;\n\n    this.setState({\n      movies: [\n        ...movies,\n        movie,\n      ],\n    });\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}